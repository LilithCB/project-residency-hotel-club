


<div class="min-h-screen flex items-center justify-center bg-gray-100 p-4">



  <form
    id="formRent"
    class="w-full sm:max-w-lg lg:max-w-xl bg-white p-6 rounded-xl shadow-md space-y-6"
  >

  <header class="mb-6 flex items-center justify-between">
      <a href="/rooms" class="text-sm text-gray-600 hover:underline">← Volver a habitaciones</a>
    </header>
    
    <input type="hidden" id="room_id" value="{{habitacion.id}}">

    <!-- Client Info -->
    <div>
      <label for="client_name" class="block text-sm font-medium text-gray-700">Client Name</label>
      <input id="client_name" name="client_name" required class="mt-1 w-full rounded-lg border border-gray-400 px-3 py-2" placeholder="Full name" />
    </div>

    <!-- Email and Phone -->
    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
      <div>
        <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
        <input id="email" name="email" type="email" required class="mt-1 w-full rounded-lg border border-gray-400 px-3 py-2" placeholder="email@example.com" />
      </div>
      <div>
        <label for="phone" class="block text-sm font-medium text-gray-700">Phone</label>
        <input id="phone" name="phone" type="tel" required class="mt-1 w-full rounded-lg border border-gray-400 px-3 py-2" placeholder="10 digits" />
      </div>
    </div>

    <!-- Dates -->
    <fieldset class="grid grid-cols-1 sm:grid-cols-2 gap-4">
      <legend class="text-sm font-medium text-gray-700">Stay</legend>
      <div>
        <label for="check_in" class="block text-sm text-gray-700">Check-in Date</label>
        <input id="check_in" name="check_in" type="date" required class="mt-1 w-full rounded-lg border border-gray-400 px-3 py-2" />
      </div>
      <div>
        <label for="check_out" class="block text-sm text-gray-700">Check-out Date</label>
        <input id="check_out" name="check_out" type="date" required class="mt-1 w-full rounded-lg border border-gray-400 px-3 py-2" />
      </div>
    </fieldset>

    <!-- Price -->
    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
      <div>
        <label for="price" class="block text-sm font-medium text-gray-700">Price</label>
        <input id="price" name="price" type="number" readonly class="mt-1 w-full rounded-lg border border-gray-200 bg-gray-100 px-3 py-2" placeholder="0.00" />
      </div>
      <div>
        <label for="price_text" class="block text-sm font-medium text-gray-700">Price in words</label>
        <input id="price_text" name="price_text" type="text" readonly class="mt-1 w-full rounded-lg border border-gray-200 bg-gray-100 px-3 py-2" />
      </div>
    </div>

    <!-- Payment -->
    <div>
      <label for="payment_type" class="block text-sm font-medium text-gray-700">Payment Type</label>
      <select id="payment_type" name="payment_type" required class="mt-1 w-full rounded-lg border border-gray-400 px-3 py-2">
        <option value="">-- Select --</option>
        <option value="Card">Card</option>
        <option value="Transfer">Transfer</option>
        <option value="Cash">Cash</option>
      </select>
    </div>

    <!-- Buttons -->
    <div class="flex items-center justify-end gap-4 pt-4">
      <a href="/rooms" class="inline-block px-4 py-2 border border-red-500 text-red-600 rounded hover:bg-red-50 transition-colors">Cancel</a>
      <button type="submit" class="inline-block px-5 py-2 bg-green-600 text-white rounded shadow hover:bg-green-700 transition-colors">Create rent</button>
    </div>
  </form>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
  const roomId = Number(document.getElementById("room_id").value);
  const checkInInput = document.getElementById("check_in");
  const checkOutInput = document.getElementById("check_out");
  const priceField = document.getElementById("price");
  const priceTextField = document.getElementById("price_text");

  async function fetchPrice(checkIn) {
    if (!checkIn) return;
    const month = new Date(checkIn).getMonth() + 1;
    try {
      const res = await fetch(`/api/rooms/${roomId}/price?month=${month}`);
      const json = await res.json();
      priceField.value = json.price ?? 0;
      priceTextField.value = json.price_text ?? "";
      console.log("Precio obtenido:", json);
    } catch (err) {
      console.error("Error obteniendo precio:", err);
    }
  }

  async function checkAvailability(checkIn, checkOut) {
    if (!checkIn || !checkOut) return;
    try {
      const url = `/api/rooms/${roomId}/available?check_in=${encodeURIComponent(checkIn)}&check_out=${encodeURIComponent(checkOut)}`;
      const res = await fetch(url);
      const json = await res.json();
      if (!json.available) {
        alert("La habitación no está disponible en esas fechas.");
        checkInInput.value = "";
        checkOutInput.value = "";
        priceField.value = "";
        priceTextField.value = "";
      }
      console.log("Disponibilidad:", json);
    } catch (err) {
      console.error("Error verificando disponibilidad:", err);
    }
  }

  checkInInput.addEventListener("change", async (e) => {
    const checkIn = e.target.value;
    await fetchPrice(checkIn);
    const checkOut = checkOutInput.value;
    if (checkOut) await checkAvailability(checkIn, checkOut);
  });

  checkOutInput.addEventListener("change", async (e) => {
    const checkIn = checkInInput.value;
    const checkOut = e.target.value;
    if (checkIn && checkOut) await checkAvailability(checkIn, checkOut);
  });
});

</script>
